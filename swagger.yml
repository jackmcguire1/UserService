---
openapi: 3.0.1
info:
  title: User Service
  version: 1.0.2
servers:
  - url: http://localhost:7755
paths:
  /sign_in:
    post:
      tags:
        - Sign_In
      summary: Authorize session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequest"
      responses:
        200:
          description: Successful or Error response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/SignInResponse"
        400:
          description: Bad Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Account Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /healthcheck:
    get:
      tags:
        - HealthCheck
      summary: Healthcheck
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthcheckResponse"
  /users:
    get:
      tags:
        - Users
      summary: Get a User
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful or Error response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/User"
                  - $ref: "#/components/schemas/Error"
        400:
          description: Bad Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a User
      tags:
        - Users
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful or Error response
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: "#/components/schemas/DeleteResponse"
                  - $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Users
      summary: Update a User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - Users
      summary: Create a User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      responses:
        200:
          description: Successful or Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                400 BadRequest:
        409:
          description: Conflict error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /search/users/:
    get:
      tags:
        - Search
      summary: All Users
      responses:
        200:
          description: Successful or Error response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/UsersList"
                  - $ref: "#/components/schemas/EmptyResponse"
        400:
          description: Bad Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/users/by_country:
    get:
      tags:
        - Search
      summary: By Country
      parameters:
        - name: cc
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/UsersList"
                  - $ref: "#/components/schemas/EmptyResponse"
        400:
          description: Bad Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    SignInRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    SignInResponse:
      type: object
      properties:
        token:
          type: string
    HealthcheckResponse:
      type: object
      properties:
        logVerbosity:
          type: string
        upTime:
          type: string
    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        countryCode:
          type: string
        nickName:
          type: string
        email:
          type: string
        saved:
          type: string
    Error:
      type: object
      properties:
        error:
          type: string
    DeleteResponse:
      type: object
      properties:
        deleted:
          type: boolean
        message:
          type: string
    CreateUserRequest:
      type: object
      properties:
        _id:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        countryCode:
          type: string
        email:
          type: string
        nickName:
          type: string
        isAdmin:
          type: boolean
    UserUpdateRequest:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        countryCode:
          type: string
        email:
          type: string
        nickName:
          type: string
    UsersList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
    EmptyResponse:
      type: object
      properties:
        users:
          type: array